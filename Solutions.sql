use mavenmovies;

-- QUESTION 1 : Find the titles of movies except starting with 'a' 
			-- that have been rented more than 30 times, 
            -- and sort them in desc order.

SELECT title, count(*) as total_rented
	FROM film f 
	JOIN inventory i ON f.film_id = i.film_id
    JOIN rental r ON r.inventory_id = i.inventory_id
WHERE f.title NOT LIKE 'a%'
GROUP BY f.film_id
HAVING total_rented > 30
ORDER BY total_rented DESC;

-- QUESTION 2 : Find the total revenue generated by 'store1'.

SELECT sum(amount) as TOTAL_REVENUE
FROM payment p 
JOIN staff s ON p.staff_id = s.staff_id
WHERE s.store_id = 1;

-- QUESTION 3 : Find the titles of movies in the 'horror' category and 
			 -- sort them based on the last character of the title

SELECT f.title
	FROM film f 
    JOIN film_category fc ON f.film_id = fc.film_id
    JOIN category c ON c.category_id = fc.category_id
WHERE c.name = 'horror'
ORDER BY SUBSTRING(trim(title), length(trim(title)));

-- QUESTION 4 : Retrieve the top 5 customers whose name starts with 'E' and 
			 -- have made the highest number of rentals. 
             -- Display their customer IDs and the total number of rentals they have made.

SELECT 
	c.customer_id, count(*) as total_number_of_rentals
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
WHERE c.first_name LIKE 'E%'
GROUP BY c.customer_id
ORDER BY total_number_of_rentals DESC
LIMIT 5;

-- QUESTION 5 : Find the total number of films available in each category, 
			 -- and list the categories in descending order of film count.

SELECT
	c.name as categories, count(*) as film_count
FROM film f
JOIN film_category fc USING(film_id)
JOIN category c USING(category_id)
GROUP BY c.category_id
ORDER BY film_count DESC;